{"version":3,"sources":["imgs/home.png","imgs/aboutus.png","Common.jsx","Home.jsx","About.jsx","Recipe.js","Alert.js","Service.jsx","Navbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Common","prpos","id","className","name","desc","to","visit","btnname","src","imgsrc","Home","web","About","about","classname","Recipe","recipe","label","image","url","ingredients","alt","href","target","rel","Alert","alert","Service","useState","query","setQuery","setRecipe","sertAlert","getData","a","axios","get","result","data","more","hits","console","log","onClick","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","map","key","uuidv4","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","area-current","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mLCmC5BC,EA/BA,SAACC,GACZ,OACI,oCACI,6BAASC,GAAG,SAASC,UAAU,IAC3B,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4DACX,4BAAKF,EAAMG,MACX,wBAAID,UAAU,QACTF,EAAMI,MAEX,yBAAKF,UAAU,SACX,kBAAC,IAAD,CAASG,GAAIL,EAAMM,MAAOJ,UAAU,0BAA0BF,EAAMO,WAG5E,yBAAKL,UAAU,2CACX,yBAAKM,IAAKR,EAAMS,OAAQP,UAAU,+BCFvDQ,EAfF,WACT,OACI,oCACI,kBAAC,EAAD,CACIP,KAAK,qBACLC,KAAK,wDACLK,OAAQE,IACRL,MAAM,WACNC,QAAQ,kB,wBCSTK,EAjBD,WACV,OACI,oCACI,kBAAC,EAAD,CACIT,KAAK,0BACLC,KAAK,wGACLK,OAAQI,IACRP,MAAM,WACNC,QAAQ,aACRO,UAAU,e,kDCEXC,EAdA,SAAC,GAAgB,IAAD,IAAbC,OACoCA,OAA1CC,EADmB,EACnBA,MAAOC,EADY,EACZA,MAAOC,EADK,EACLA,IADK,EACAC,YAC3B,OACI,yBAAKlB,UAAU,UACX,yBAAKM,IAAKU,EAAOG,IAAKJ,IACtB,4BAAKA,GACL,uBAAGK,KAAMH,EAAKI,OAAO,SAASC,IAAI,uBAAlC,mBCEGC,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACb,OACI,yBAAKxB,UAAU,SACX,4BAAKwB,EAAL,O,QCuDGC,EAvDC,WAAO,IAAD,EAEQ,IAAIC,WAAS,IAFrB,mBAEXC,EAFW,KAEJC,EAFI,OAGU,IAAIF,WAAS,IAHvB,mBAGXZ,EAHW,KAGHe,EAHG,OAIS,IAAIH,WAAS,IAJtB,mBAIXF,EAJW,KAIJM,EAJI,KAOZb,EAAG,0CAAsCU,EAAtC,yHAEHI,EAAO,uCAAG,4BAAAC,EAAA,yDACC,IAATL,EADQ,iCAEaM,IAAMC,IAAIjB,GAFvB,WAEFkB,EAFE,QAGIC,KAAKC,KAHT,yCAIGP,EAAU,2BAJb,OAMRD,EAAUM,EAAOC,KAAKE,MACtBC,QAAQC,IAAIL,GACZL,EAAU,IACVF,EAAS,IATD,wBAYRE,EAAU,wBAZF,4CAAH,qDAuBb,OACI,oCACI,6BAAS/B,GAAG,SAASC,UAAU,IAC3B,yBAAKA,UAAU,oCACX,wBAAIyC,QAASV,GAAb,kBACA,0BAAM/B,UAAU,cAAc0C,SAT7B,SAAAC,GACbA,EAAEC,iBACFb,MAQ0B,IAATP,GAAe,kBAAC,EAAD,CAAOA,MAAOA,IAC9B,2BAAOxB,UAAU,QAAQ6C,KAAK,OAAOC,YAAY,cAAcC,aAAa,MAAMC,SAdrF,SAAAL,GACbf,EAASe,EAAEtB,OAAO4B,QAaoGA,MAAOtB,IAC7G,2BAAOkB,KAAK,SAASI,MAAM,SAASjD,UAAU,aAGtD,yBAAKA,UAAU,WACVc,IAAW,IAAMA,EAAOoC,KAAI,SAAApC,GAAM,OAAI,kBAAC,EAAD,CAAQqC,IAAKC,eAAUtC,OAAQA,WCV3EuC,G,MApCA,WACX,OACI,oCACI,yBAAKrD,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,+CACX,kBAAC,IAAD,CAASA,UAAU,eAAeG,GAAG,SAArC,sBACA,4BAAQH,UAAU,iBAAiB6C,KAAK,SAASS,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClL,0BAAM1D,UAAU,8BAGpB,yBAAKA,UAAU,2BAA2BD,GAAG,0BACzC,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,aACV,kBAAC,IAAD,CAAS2D,gBAAgB,cAAcC,eAAa,OAAO5D,UAAU,WAAWG,GAAG,SAAnF,UAEJ,wBAAIH,UAAU,YACV,kBAAC,IAAD,CAAS2D,gBAAgB,cAAc3D,UAAU,WAAWG,GAAG,YAA/D,WAEJ,wBAAIH,UAAU,YACV,kBAAC,IAAD,CAAS2D,gBAAgB,cAAc3D,UAAU,WAAWG,GAAG,UAA/D,mBCEzB0D,EAjBH,WACR,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjC,kBAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,SAASC,UAAWtD,IACtC,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,WAAWC,UAAWvC,IAExC,kBAAC,IAAD,CAAUtB,GAAG,SCNT8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1C,QAAQ0C,MAAMA,EAAMC,c","file":"static/js/main.674f7f4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.fb7121df.png\";","module.exports = __webpack_public_path__ + \"static/media/aboutus.3400cdc1.png\";","import React from 'react'\r\nimport web from \"../src/imgs/home.png\";\r\nimport \"./home.css\"\r\nimport { NavLink } from 'react-router-dom';\r\nconst Common = (prpos) => {\r\n    return (\r\n        <>\r\n            <section id=\"header\" className=\"\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 pt-5 pt-lg-0 order-2 order-lg-1 mt-5 text_class\">\r\n                                    <h1>{prpos.name}</h1>\r\n                                    <h2 className=\"my-3\">\r\n                                        {prpos.desc}\r\n                                    </h2>\r\n                                    <div className=\"mt-3 \" >\r\n                                        <NavLink to={prpos.visit} className=\"btn btn-primary button\">{prpos.btnname}</NavLink>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6 order-1 order-lg-2 header-img \">\r\n                                    <img src={prpos.imgsrc} className=\"img-fluid animated\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Common;","import React from 'react'\r\nimport web from \"../src/imgs/home.png\";\r\nimport \"./home.css\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport Common from './Common';\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Common\r\n                name=\"Lets Cook Together\"\r\n                desc=\"Here is the quick and best recipes for you all guyss.\"\r\n                imgsrc={web}\r\n                visit=\"/service\"\r\n                btnname=\"Get Started\"\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport about from \"../src/imgs/aboutus.png\";\r\nimport \"./home.css\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport Common from './Common';\r\nconst About = () => {\r\n    return (\r\n        <>\r\n            <Common\r\n                name=\"We Are here to Help You\"\r\n                desc=\"Here is the quick and best recipes for you all guyss. check the recipe section for search your recipe\"\r\n                imgsrc={about}\r\n                visit=\"/service\"\r\n                btnname=\"Know More \"\r\n                classname=\"size_inc\"\r\n\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default About;","import React from 'react'\r\n\r\nconst Recipe = ({ recipe }) => {\r\n    const { label, image, url, ingredients } = recipe.recipe;\r\n    return (\r\n        <div className=\"recipe\">\r\n            <img src={image} alt={label} />\r\n            <h2>{label}</h2>\r\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" >Get More Info</a>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react'\r\n\r\nconst Alert = ({ alert }) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            <h3>{alert} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Recipe from \"./Recipe\";\r\nimport Alert from \"./Alert\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst Service = () => {\r\n\r\n    const [query, setQuery] = new useState(\"\");\r\n    const [recipe, setRecipe] = new useState([]);\r\n    const [alert, sertAlert] = new useState(\"\");\r\n    const APP_ID = \"9fb3a946\";\r\n    const APP_KEY = \"9c2ba3083d2dadf1166aa1f369139e98\";\r\n    const url = `https://api.edamam.com/search?q=${query}&app_id=9fb3a946&app_key=9c2ba3083d2dadf1166aa1f369139e98& from=0 & to=3 & calories=591 - 722 & health=alcohol - free`;\r\n\r\n    const getData = async () => {\r\n        if (query != \"\") {\r\n            const result = await axios.get(url);\r\n            if (!result.data.more) {\r\n                return sertAlert(\"No Food With This Name\")\r\n            }\r\n            setRecipe(result.data.hits);\r\n            console.log(result);\r\n            sertAlert(\"\");\r\n            setQuery(\"\");\r\n        }\r\n        else {\r\n            sertAlert('please fill the form')\r\n        }\r\n\r\n    }\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        getData();\r\n    }\r\n    return (\r\n        <>\r\n            <section id=\"header\" className=\"\">\r\n                <div className=\"container-fluid text-center mt-5\">\r\n                    <h3 onClick={getData}>Search recipe </h3>\r\n                    <form className=\"search-form\" onSubmit={onSubmit}>\r\n                        {alert != \"\" && <Alert alert={alert} />}\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Search Food\" autoComplete=\"off\" onChange={onChange} value={query} />\r\n                        <input type=\"submit\" value=\"search\" className=\"button\" />\r\n                    </form>\r\n                </div>\r\n                <div className=\"recipes\">\r\n                    {recipe !== [] && recipe.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />)}\r\n\r\n                </div>\r\n\r\n            </section>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Service;","import React from 'react'\r\nimport \"./index.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid nav_bg\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                            <NavLink className=\"navbar-brand\" to=\"/home\">🥘Foods.</NavLink>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon icon\"></span>\r\n                            </button>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item \">\r\n                                        <NavLink activeClassName=\"menu_active\" area-current=\"page\" className=\"nav-link\" to=\"/home\">Home </NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"/service\">Recipe</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                                    </li>\r\n\r\n\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </nav>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\r\nimport Home from \"./Home\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport About from './About';\r\nimport Service from './Service';\r\n\r\nimport Navbar from \"./Navbar\";\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/service\" component={Service} />\r\n\r\n                <Redirect to=\"/\"></Redirect>\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}